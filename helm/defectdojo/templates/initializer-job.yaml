{{- $fullName := include "defectdojo.fullname" . -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-initializer
  labels:
    defectdojo.org/component: initializer
    app.kubernetes.io/name: {{ include "defectdojo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "defectdojo.chart" . }}
spec:
  ttlSecondsAfterFinished: {{ .Values.initializerKeepSeconds }}
  template:
    metadata:
      labels:
        defectdojo.org/component: initializer
        app.kubernetes.io/name: {{ include "defectdojo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: initializer
          image: "{{ .Values.initializer.repository }}:{{ .Values.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: DD_DATABASE_ENGINE
              value: django.db.backends.{{ if eq .Values.database "postgresql" }}postgresql_psycopg2{{ end }}{{ if eq .Values.database "mysql" }}mysql{{ end }}
            - name: DD_DATABASE_HOST
              value: {{ $fullName }}-{{ .Values.database }}
            - name: DD_DATABASE_PORT
              value: "{{ if eq .Values.database "postgresql" }}{{ .Values.postgresql.service.port }}{{ end }}{{ if eq .Values.database "mysql" }}3306{{ end }}"
            - name: DD_DATABASE_USER
              value: {{ if eq .Values.database "postgresql" }}{{ .Values.postgresql.postgresqlUsername }}{{ end }}{{ if eq .Values.database "mysql" }}{{ .Values.mysql.mysqlUser }}{{ end }}
            - name: DD_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-{{ .Values.database }}
                  key: {{ .Values.database }}-password
          resources:
            {{- toYaml .Values.initializer.resources | nindent 10 }}
      restartPolicy: Never
  backoffLimit: 1
